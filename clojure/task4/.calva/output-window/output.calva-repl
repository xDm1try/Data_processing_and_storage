; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd c:\Users\Murav\Desktop\Data processing and storage\clojure\task4 & cmd.exe /d /c lein update-in :dependencies conj [nrepl,"1.0.0"] -- update-in :plugins conj [cider/cider-nrepl,"0.28.5"] -- update-in [:repl-options,:nrepl-middleware] conj '["cider.nrepl/cider-middleware"]' -- with-profile +uberjar repl :headless & popd
; Using host:port 127.0.0.1:55421 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉task4.core꞉>  ; Use `alt+enter` to evaluate
clj꞉task4.core꞉> 
; Jack-in done.
clj꞉task4.core꞉> 
#'task4.core/-main
clj꞉task4.core꞉> 
#'task4.core/my_while
clj꞉task4.core꞉> 
#'task4.core/phil
clj꞉task4.core꞉> 
#'task4.core/philos
clj꞉task4.core꞉> 
1  is thinking
1  took fork1  #ref[{:status :ready, :val 1} 0x39ad98ae]
1  is eating #ref[{:status :ready, :val 1} 0x39ad98ae]   #ref[{:status :ready, :val 1} 0xf9b2155]
1  is thinking
2  is thinking
2  took fork1  #ref[{:status :ready, :val 1} 0xf9b2155]
2  is eating #ref[{:status :ready, :val 1} 0xf9b2155]   #ref[{:status :ready, :val 1} 0x38f7f6dd]
2  is thinking
0  is thinking
0  took fork1  #ref[{:status :ready, :val 1} 0x38f7f6dd]
0  is eating #ref[{:status :ready, :val 1} 0x38f7f6dd]   #ref[{:status :ready, :val 1} 0x39ad98ae]
0  is thinking
1  is thinking
1  took fork1  #ref[{:status :ready, :val 1} 0x39ad98ae]
1  is eating #ref[{:status :ready, :val 1} 0x39ad98ae]   #ref[{:status :ready, :val 1} 0xf9b2155]
2  is thinking
2  took fork1  #ref[{:status :ready, :val 1} 0xf9b2155]
2  is eating #ref[{:status :ready, :val 1} 0xf9b2155]   #ref[{:status :ready, :val 1} 0x38f7f6dd]
1  is thinking
0  is thinking
0  took fork1  #ref[{:status :ready, :val 1} 0x38f7f6dd]
0  is eating #ref[{:status :ready, :val 1} 0x38f7f6dd]   #ref[{:status :ready, :val 1} 0x39ad98ae]
2  is thinking
1  is thinking
1  took fork1  #ref[{:status :ready, :val 1} 0x39ad98ae]
1  is eating #ref[{:status :ready, :val 1} 0x39ad98ae]   #ref[{:status :ready, :val 1} 0xf9b2155]
1  is thinking
0  is thinking
2  is thinking
2  took fork1  #ref[{:status :ready, :val 1} 0xf9b2155]
2  is eating #ref[{:status :ready, :val 1} 0xf9b2155]   #ref[{:status :ready, :val 1} 0x38f7f6dd]
2  is thinking
1  is thinking
0  is thinking
0  took fork1  #ref[{:status :ready, :val 1} 0x38f7f6dd]
0  is eating #ref[{:status :ready, :val 1} 0x38f7f6dd]   #ref[{:status :ready, :val 1} 0x39ad98ae]
1  is thinking
1  took fork1  #ref[{:status :ready, :val 1} 0x39ad98ae]
1  is eating #ref[{:status :ready, :val 1} 0x39ad98ae]   #ref[{:status :ready, :val 1} 0xf9b2155]
0  is thinking
2  is thinking
2  took fork1  #ref[{:status :ready, :val 1} 0xf9b2155]
2  is eating #ref[{:status :ready, :val 1} 0xf9b2155]   #ref[{:status :ready, :val 1} 0x38f7f6dd]
0  is thinking
0  took fork1  #ref[{:status :ready, :val 1} 0x38f7f6dd]
0  is eating #ref[{:status :ready, :val 1} 0x38f7f6dd]   #ref[{:status :ready, :val 1} 0x39ad98ae]
1  is thinking
1  took fork1  #ref[{:status :ready, :val 1} 0x39ad98ae]
1  is eating #ref[{:status :ready, :val 1} 0x39ad98ae]   #ref[{:status :ready, :val 1} 0xf9b2155]
2  is thinking
2  took fork1  #ref[{:status :ready, :val 1} 0xf9b2155]
2  is eating #ref[{:status :ready, :val 1} 0xf9b2155]   #ref[{:status :ready, :val 1} 0x38f7f6dd]
2  is thinking
0  is thinking
0  took fork1  #ref[{:status :ready, :val 1} 0x38f7f6dd]
0  is eating #ref[{:status :ready, :val 1} 0x38f7f6dd]   #ref[{:status :ready, :val 1} 0x39ad98ae]
0  is thinking
2  is thinking
1  is thinking
1  took fork1  #ref[{:status :ready, :val 1} 0x39ad98ae]
1  is eating #ref[{:status :ready, :val 1} 0x39ad98ae]   #ref[{:status :ready, :val 1} 0xf9b2155]
2  is thinking
2  took fork1  #ref[{:status :ready, :val 1} 0xf9b2155]
2  is eating #ref[{:status :ready, :val 1} 0xf9b2155]   #ref[{:status :ready, :val 1} 0x38f7f6dd]
0  is thinking
0  took fork1  #ref[{:status :ready, :val 1} 0x38f7f6dd]
0  is eating #ref[{:status :ready, :val 1} 0x38f7f6dd]   #ref[{:status :ready, :val 1} 0x39ad98ae]
(nil nil nil)
clj꞉task4.core꞉> 
